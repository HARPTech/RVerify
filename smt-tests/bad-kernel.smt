(set-logic AUFNIRA)
(set-option :produce-unsat-cores true)
(echo "Start")
;; Declare helper functions
(declare-fun pi () Real)
(assert (= pi 3.14159265359))

(define-fun mapReal ((x Real) (min Real) (max Real) (outMin Real) (outMax Real)) Real
    (* (/ (- x min) (- max min)) (+ (- outMax outMin) outMin)))

(define-fun mapInt ((x Int) (min Int) (max Int) (outMin Int) (outMax Int)) Int
    (* (div (- x min) (- max min)) (+ (- outMax outMin) outMin)))

;;(define-fun tanPrecise ((x Real)) Real
;;    (+ x
;;       (* (/ 1 3) x x x)
;;       (* (/ 2 15) x x x x x)
;;       (* (/ 17 315) x x x x x x x)))
    
;; (define-fun atanPrecise ((x Real)) Real
;;   (ite (< x -1)
;;     (- (- (/ pi 2)) (/ x (+ (* x x) 0.28)))
;;     (ite (> x 1)
;;       (- (/ pi 2) (/ x (+ (* x x) 0.28)))
;;        (/ x (+ 1 (* x x 0.28))))))

(define-fun-rec tan ((x Real)) Real (ite (<= x -1.5707649108683606) -31830.98860774804  (ite (<= x -1.5707649108683606) -31830.98860774804  (ite (<= x -1.5707601546416174) -27645.57564062988  (ite (<= x -1.5707546783440274) -24010.496874454504  (ite (<= x -1.5707483729601768) -20853.38962099025  (ite (<= x -1.57074111297022) -18111.406062537393  (ite (<= x -1.5707327538511848) -15729.962154754303  (ite (<= x -1.5707231291999852) -13661.651034092432  (ite (<= x -1.5707120474208738) -11865.299300411736  (ite (<= x -1.5706992879113886) -10305.147387420811  (ite (<= x -1.57068459667087) -8950.137705035379  (ite (<= x -1.570667681244126) -7773.296382917718  (ite (<= x -1.5706482048995956) -6751.1963079739435  (ite (<= x -1.5706257799261074) -5863.490765934692  (ite (<= x -1.5705999599148033) -5092.508404020804  (ite (<= x -1.570570230872577) -4422.901451300438  (ite (<= x -1.5705360009901315) -3841.340194116671  (ite (<= x -1.570496588860964) -3336.247624491659  (ite (<= x -1.5704512099167631) -2897.5689792583917  (ite (<= x -1.5703989608091837) -2516.57158217184  (ite (<= x -1.570338801427098) -2185.6710045064196  (ite (<= x -1.5702695341913382) -1898.2800835501873  (ite (<= x -1.5701897802147604) -1648.6777934557238  (ite (<= x -1.5700979518530507) -1431.8953580736243  (ite (<= x -1.56999222109985) -1243.6173386552193  (ite (<= x -1.569870483197048) -1080.0957273938295  (ite (<= x -1.569730314735838) -938.0753366796488  (ite (<= x -1.56956892541447) -814.7289988227012  (ite (<= x -1.5693831024923464) -707.6012862650572  (ite (<= x -1.5691691468347237) -614.5596319426552  (ite (<= x -1.5689227992748775) -533.7518767562177  (ite (<= x -1.5686391558278352) -463.56939906014634  (ite (<= x -1.5683125700678613) -402.6150921968978  (ite (<= x -1.5679365407263424) -349.67555261173885  (ite (<= x -1.5675035822725052) -303.69692490312667  (ite (<= x -1.5670050759006577) -263.76392296287673  (ite (<= x -1.566431097957578) -229.08160958297938  (ite (<= x -1.5657702223946006) -198.95957182102686  (ite (<= x -1.5650092933118613) -172.79817710652114  (ite (<= x -1.5641331630667819) -150.07663649124171  (ite (<= x -1.5631243907333863) -130.34263742180366  (ite (<= x -1.5619628949097468) -113.20333965626273  (ite (<= x -1.5606255539620717) -98.31755508243491  (ite (<= x -1.5590857457475877) -85.3889557634179  (ite (<= x -1.5573128176535858) -74.16017500436386  (ite (<= x -1.555271476402815) -64.40768401172475  (ite (<= x -1.5529210854782225) -55.93734215573288  (ite (<= x -1.550214856181028) -48.580532256092695  (ite (<= x -1.547098916218716) -42.19080395675375  (ite (<= x -1.5435112372815323) -36.64095836994213  (ite (<= x -1.5393804002589986) -31.820515953773853  (ite (<= x -1.4451326206513049) -7.915815088305826  (ite (<= x -1.382300767579509) -5.242183581113174  (ite (<= x -1.3194689145077132) -3.8947428549298597  (ite (<= x -1.2566370614359172) -3.0776835371752527  (ite (<= x -1.1938052083641213) -2.525711689447304  (ite (<= x -1.1309733552923256) -2.125108173157203  (ite (<= x -1.0681415022205298) -1.8189932472810668  (ite (<= x -1.0053096491487339) -1.5757478599686512  (ite (<= x -0.942477796076938) -1.3763819204711738  (ite (<= x -0.8796459430051421) -1.2087923504096092  (ite (<= x -0.8168140899333463) -1.0648918403247918  (ite (<= x -0.7539822368615504) -0.9390625058174924  (ite (<= x -0.6911503837897546) -0.8272719459724758  (ite (<= x -0.6283185307179587) -0.726542528005361  (ite (<= x -0.5654866776461629) -0.6346192975441483  (ite (<= x -0.5026548245743669) -0.5497546521927701  (ite (<= x -0.4398229715025712) -0.4705642812122517  (ite (<= x -0.37699111843077526) -0.39592800879772133  (ite (<= x -0.31415926535897953) -0.32491969623290656  (ite (<= x -0.2513274122871836) -0.2567563603677269  (ite (<= x -0.18849555921538763) -0.1907602022185668  (ite (<= x -0.1445132620651306) -0.1455277465220213  (ite (<= x -0.13823007675795096) -0.13911727111201924  (ite (<= x -0.13194689145077154) -0.1327179928498482  (ite (<= x -0.1256637061435919) -0.12632937844610834  (ite (<= x -0.1256637061435919) -0.12632937844610834  (ite (<= x -0.11938052083641226) -0.11995089806863027  (ite (<= x -0.11309733552923262) -0.11358202516275519  (ite (<= x -0.1068141502220532) -0.10722223627388755  (ite (<= x -0.10053096491487357) -0.10087101087218783  (ite (<= x -0.09424777960769393) -0.09452783117928218  (ite (<= x -0.08796459430051429) -0.08819218199685958  (ite (<= x -0.08168140899333487) -0.08186355053703812  (ite (<= x -0.07539822368615523) -0.07554142625437708  (ite (<= x -0.06911503837897559) -0.06922530067942033  (ite (<= x -0.06283185307179595) -0.06291466725364984  (ite (<= x -0.06283185307179595) -0.06291466725364984  (ite (<= x -0.05654866776461631) -0.05660902116573796  (ite (<= x -0.050265482457436894) -0.05030785918898381  (ite (<= x -0.043982297150257255) -0.044010679519820836  (ite (<= x -0.037699111843077615) -0.03771698161728811  (ite (<= x -0.031415926535897976) -0.03142626604335119  (ite (<= x -0.025132741228718558) -0.025138034303967657  (ite (<= x -0.01884955592153892) -0.018851788690786745  (ite (<= x -0.012566370614359279) -0.012567032123379684  (ite (<= x -0.0062831853071796395) -0.006283267991889825  (ite (<= x 0.0) 0.0  (ite (<= x 0.0) 0.0  (ite (<= x 0.0) 0.0  (ite (<= x 0.0) 0.0  (ite (<= x 0.006283185307179586) 0.006283267991889771  (ite (<= x 0.012566370614359171) 0.012567032123379576  (ite (<= x 0.018849555921538756) 0.018851788690786582  (ite (<= x 0.025132741228718343) 0.02513803430396744  (ite (<= x 0.03141592653589793) 0.03142626604335114  (ite (<= x 0.03769911184307751) 0.03771698161728801  (ite (<= x 0.0439822971502571) 0.044010679519820683  (ite (<= x 0.050265482457436686) 0.050307859188983596  (ite (<= x 0.05654866776461627) 0.05660902116573792  (ite (<= x 0.06283185307179585) 0.06291466725364975  (ite (<= x 0.06283185307179585) 0.06291466725364975  (ite (<= x 0.06911503837897544) 0.06922530067942018  (ite (<= x 0.07539822368615502) 0.07554142625437686  (ite (<= x 0.08168140899333462) 0.08186355053703787  (ite (<= x 0.0879645943005142) 0.08819218199685949  (ite (<= x 0.09424777960769379) 0.09452783117928204  (ite (<= x 0.10053096491487337) 0.10087101087218764  (ite (<= x 0.10681415022205296) 0.10722223627388729  (ite (<= x 0.11309733552923254) 0.1135820251627551  (ite (<= x 0.11938052083641212) 0.11995089806863013  (ite (<= x 0.1256637061435917) 0.12632937844610814  (ite (<= x 0.1256637061435917) 0.12632937844610814  (ite (<= x 0.1319468914507713) 0.13271799284984795  (ite (<= x 0.13823007675795088) 0.13911727111201916  (ite (<= x 0.14451326206513046) 0.14552774652202116  (ite (<= x 0.18849555921538758) 0.19076020221856674  (ite (<= x 0.2513274122871834) 0.25675636036772675  (ite (<= x 0.31415926535897926) 0.32491969623290623  (ite (<= x 0.37699111843077515) 0.3959280087977212  (ite (<= x 0.439822971502571) 0.4705642812122514  (ite (<= x 0.5026548245743668) 0.54975465219277  (ite (<= x 0.5654866776461627) 0.6346192975441479  (ite (<= x 0.6283185307179585) 0.7265425280053607  (ite (<= x 0.6911503837897545) 0.8272719459724756  (ite (<= x 0.7539822368615503) 0.9390625058174922  (ite (<= x 0.8168140899333461) 1.0648918403247916  (ite (<= x 0.879645943005142) 1.2087923504096088  (ite (<= x 0.9424777960769378) 1.3763819204711731  (ite (<= x 1.0053096491487337) 1.5757478599686505  (ite (<= x 1.0681415022205296) 1.818993247281066  (ite (<= x 1.1309733552923253) 2.1251081731572015  (ite (<= x 1.1938052083641213) 2.525711689447304  (ite (<= x 1.256637061435917) 3.0776835371752504  (ite (<= x 1.319468914507713) 3.894742854929856  (ite (<= x 1.382300767579509) 5.242183581113174  (ite (<= x 1.4451326206513047) 7.915815088305812  (ite (<= x 1.5393804002589986) 31.820515953773853  (ite (<= x 1.543511237281532) 36.640958369941835  (ite (<= x 1.5470989162187159) 42.19080395675335  (ite (<= x 1.550214856181028) 48.580532256092695  (ite (<= x 1.5529210854782223) 55.93734215573218  (ite (<= x 1.5552714764028148) 64.40768401172383  (ite (<= x 1.5573128176535855) 74.16017500436264  (ite (<= x 1.5590857457475877) 85.3889557634179  (ite (<= x 1.5606255539620717) 98.31755508243491  (ite (<= x 1.5619628949097468) 113.20333965626273  (ite (<= x 1.563124390733386) 130.34263742179988  (ite (<= x 1.5641331630667816) 150.0766364912367  (ite (<= x 1.5650092933118613) 172.79817710652114  (ite (<= x 1.5657702223946004) 198.95957182101807  (ite (<= x 1.5664310979575777) 229.08160958296773  (ite (<= x 1.5670050759006577) 263.76392296287673  (ite (<= x 1.567503582272505) 303.6969249031062  (ite (<= x 1.5679365407263421) 349.67555261171174  (ite (<= x 1.5683125700678613) 402.6150921968978  (ite (<= x 1.568639155827835) 463.5693990600986  (ite (<= x 1.5689227992748773) 533.7518767561544  (ite (<= x 1.5691691468347235) 614.5596319425713  (ite (<= x 1.5693831024923461) 707.601286264946  (ite (<= x 1.5695689254144698) 814.7289988225539  (ite (<= x 1.5697303147358377) 938.0753366794534  (ite (<= x 1.5698704831970478) 1080.0957273935703  (ite (<= x 1.5699922210998498) 1243.617338654876  (ite (<= x 1.5700979518530505) 1431.895358073169  (ite (<= x 1.5701897802147602) 1648.6777934551203  (ite (<= x 1.5702695341913382) 1898.2800835501873  (ite (<= x 1.570338801427098) 2185.6710045064196  (ite (<= x 1.5703989608091837) 2516.57158217184  (ite (<= x 1.570451209916763) 2897.5689792565277  (ite (<= x 1.570496588860964) 3336.247624491659  (ite (<= x 1.5705360009901312) 3841.3401941133943  (ite (<= x 1.5705702308725769) 4422.901451296094  (ite (<= x 1.5705999599148033) 5092.508404020804  (ite (<= x 1.5706257799261074) 5863.490765934692  (ite (<= x 1.5706482048995953) 6751.196307963823  (ite (<= x 1.570667681244126) 7773.296382917718  (ite (<= x 1.5706845966708698) 8950.137705017592  (ite (<= x 1.5706992879113886) 10305.147387420811  (ite (<= x 1.5707120474208738) 11865.299300411736  (ite (<= x 1.5707231291999852) 13661.651034092432  (ite (<= x 1.5707327538511846) 15729.962154699362  (ite (<= x 1.57074111297022) 18111.406062537393  (ite (<= x 1.5707483729601766) 20853.38962089369  (ite (<= x 1.5707546783440272) 24010.496874326494  (ite (<= x 1.5707601546416174) 27645.57564062988  (ite (<= x 1.5707649108683606) 31830.98860774804  (tan (- x pi))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))


(define-fun atan ((x Real)) Real (ite (>= x 31830.98860774804) 1.5707649108683606  (ite (>= x 31830.98860774804) 1.5707649108683606  (ite (>= x 27645.57564062988) 1.5707601546416174  (ite (>= x 24010.496874326494) 1.5707546783440272  (ite (>= x 20853.38962089369) 1.5707483729601766  (ite (>= x 18111.406062537393) 1.57074111297022  (ite (>= x 15729.962154699362) 1.5707327538511846  (ite (>= x 13661.651034092432) 1.5707231291999852  (ite (>= x 11865.299300411736) 1.5707120474208738  (ite (>= x 10305.147387420811) 1.5706992879113886  (ite (>= x 8950.137705017592) 1.5706845966708698  (ite (>= x 7773.296382917718) 1.570667681244126  (ite (>= x 6751.196307963823) 1.5706482048995953  (ite (>= x 5863.490765934692) 1.5706257799261074  (ite (>= x 5092.508404020804) 1.5705999599148033  (ite (>= x 4422.901451296094) 1.5705702308725769  (ite (>= x 3841.3401941133943) 1.5705360009901312  (ite (>= x 3336.247624491659) 1.570496588860964  (ite (>= x 2897.5689792565277) 1.570451209916763  (ite (>= x 2516.57158217184) 1.5703989608091837  (ite (>= x 2185.6710045064196) 1.570338801427098  (ite (>= x 1898.2800835501873) 1.5702695341913382  (ite (>= x 1648.6777934551203) 1.5701897802147602  (ite (>= x 1431.895358073169) 1.5700979518530505  (ite (>= x 1243.617338654876) 1.5699922210998498  (ite (>= x 1080.0957273935703) 1.5698704831970478  (ite (>= x 938.0753366794534) 1.5697303147358377  (ite (>= x 814.7289988225539) 1.5695689254144698  (ite (>= x 707.601286264946) 1.5693831024923461  (ite (>= x 614.5596319425713) 1.5691691468347235  (ite (>= x 533.7518767561544) 1.5689227992748773  (ite (>= x 463.5693990600986) 1.568639155827835  (ite (>= x 402.6150921968978) 1.5683125700678613  (ite (>= x 349.67555261171174) 1.5679365407263421  (ite (>= x 303.6969249031062) 1.567503582272505  (ite (>= x 263.76392296287673) 1.5670050759006577  (ite (>= x 229.08160958296773) 1.5664310979575777  (ite (>= x 198.95957182101807) 1.5657702223946004  (ite (>= x 172.79817710652114) 1.5650092933118613  (ite (>= x 150.0766364912367) 1.5641331630667816  (ite (>= x 130.34263742179988) 1.563124390733386  (ite (>= x 113.20333965626273) 1.5619628949097468  (ite (>= x 98.31755508243491) 1.5606255539620717  (ite (>= x 85.3889557634179) 1.5590857457475877  (ite (>= x 74.16017500436264) 1.5573128176535855  (ite (>= x 64.40768401172383) 1.5552714764028148  (ite (>= x 55.93734215573218) 1.5529210854782223  (ite (>= x 48.580532256092695) 1.550214856181028  (ite (>= x 42.19080395675335) 1.5470989162187159  (ite (>= x 36.640958369941835) 1.543511237281532  (ite (>= x 31.820515953773853) 1.5393804002589986  (ite (>= x 7.915815088305812) 1.4451326206513047  (ite (>= x 5.242183581113174) 1.382300767579509  (ite (>= x 3.894742854929856) 1.319468914507713  (ite (>= x 3.0776835371752504) 1.256637061435917  (ite (>= x 2.525711689447304) 1.1938052083641213  (ite (>= x 2.1251081731572015) 1.1309733552923253  (ite (>= x 1.818993247281066) 1.0681415022205296  (ite (>= x 1.5757478599686505) 1.0053096491487337  (ite (>= x 1.3763819204711731) 0.9424777960769378  (ite (>= x 1.2087923504096088) 0.879645943005142  (ite (>= x 1.0648918403247916) 0.8168140899333461  (ite (>= x 0.9390625058174922) 0.7539822368615503  (ite (>= x 0.8272719459724756) 0.6911503837897545  (ite (>= x 0.7265425280053607) 0.6283185307179585  (ite (>= x 0.6346192975441479) 0.5654866776461627  (ite (>= x 0.54975465219277) 0.5026548245743668  (ite (>= x 0.4705642812122514) 0.439822971502571  (ite (>= x 0.3959280087977212) 0.37699111843077515  (ite (>= x 0.32491969623290623) 0.31415926535897926  (ite (>= x 0.25675636036772675) 0.2513274122871834  (ite (>= x 0.19076020221856674) 0.18849555921538758  (ite (>= x 0.14552774652202116) 0.14451326206513046  (ite (>= x 0.13911727111201916) 0.13823007675795088  (ite (>= x 0.13271799284984795) 0.1319468914507713  (ite (>= x 0.12632937844610814) 0.1256637061435917  (ite (>= x 0.12632937844610814) 0.1256637061435917  (ite (>= x 0.11995089806863013) 0.11938052083641212  (ite (>= x 0.1135820251627551) 0.11309733552923254  (ite (>= x 0.10722223627388729) 0.10681415022205296  (ite (>= x 0.10087101087218764) 0.10053096491487337  (ite (>= x 0.09452783117928204) 0.09424777960769379  (ite (>= x 0.08819218199685949) 0.0879645943005142  (ite (>= x 0.08186355053703787) 0.08168140899333462  (ite (>= x 0.07554142625437686) 0.07539822368615502  (ite (>= x 0.06922530067942018) 0.06911503837897544  (ite (>= x 0.06291466725364975) 0.06283185307179585  (ite (>= x 0.06291466725364975) 0.06283185307179585  (ite (>= x 0.05660902116573792) 0.05654866776461627  (ite (>= x 0.050307859188983596) 0.050265482457436686  (ite (>= x 0.044010679519820683) 0.0439822971502571  (ite (>= x 0.03771698161728801) 0.03769911184307751  (ite (>= x 0.03142626604335114) 0.03141592653589793  (ite (>= x 0.02513803430396744) 0.025132741228718343  (ite (>= x 0.018851788690786582) 0.018849555921538756  (ite (>= x 0.012567032123379576) 0.012566370614359171  (ite (>= x 0.006283267991889771) 0.006283185307179586  (ite (>= x 0.0) 0.0  (ite (>= x 0.0) 0.0  (ite (>= x 0.0) 0.0  (ite (>= x 0.0) 0.0  (ite (>= x -0.006283267991889825) -0.0062831853071796395  (ite (>= x -0.012567032123379684) -0.012566370614359279  (ite (>= x -0.018851788690786745) -0.01884955592153892  (ite (>= x -0.025138034303967657) -0.025132741228718558  (ite (>= x -0.03142626604335119) -0.031415926535897976  (ite (>= x -0.03771698161728811) -0.037699111843077615  (ite (>= x -0.044010679519820836) -0.043982297150257255  (ite (>= x -0.05030785918898381) -0.050265482457436894  (ite (>= x -0.05660902116573796) -0.05654866776461631  (ite (>= x -0.06291466725364984) -0.06283185307179595  (ite (>= x -0.06291466725364984) -0.06283185307179595  (ite (>= x -0.06922530067942033) -0.06911503837897559  (ite (>= x -0.07554142625437708) -0.07539822368615523  (ite (>= x -0.08186355053703812) -0.08168140899333487  (ite (>= x -0.08819218199685958) -0.08796459430051429  (ite (>= x -0.09452783117928218) -0.09424777960769393  (ite (>= x -0.10087101087218783) -0.10053096491487357  (ite (>= x -0.10722223627388755) -0.1068141502220532  (ite (>= x -0.11358202516275519) -0.11309733552923262  (ite (>= x -0.11995089806863027) -0.11938052083641226  (ite (>= x -0.12632937844610834) -0.1256637061435919  (ite (>= x -0.12632937844610834) -0.1256637061435919  (ite (>= x -0.1327179928498482) -0.13194689145077154  (ite (>= x -0.13911727111201924) -0.13823007675795096  (ite (>= x -0.1455277465220213) -0.1445132620651306  (ite (>= x -0.1907602022185668) -0.18849555921538763  (ite (>= x -0.2567563603677269) -0.2513274122871836  (ite (>= x -0.32491969623290656) -0.31415926535897953  (ite (>= x -0.39592800879772133) -0.37699111843077526  (ite (>= x -0.4705642812122517) -0.4398229715025712  (ite (>= x -0.5497546521927701) -0.5026548245743669  (ite (>= x -0.6346192975441483) -0.5654866776461629  (ite (>= x -0.726542528005361) -0.6283185307179587  (ite (>= x -0.8272719459724758) -0.6911503837897546  (ite (>= x -0.9390625058174924) -0.7539822368615504  (ite (>= x -1.0648918403247918) -0.8168140899333463  (ite (>= x -1.2087923504096092) -0.8796459430051421  (ite (>= x -1.3763819204711738) -0.942477796076938  (ite (>= x -1.5757478599686512) -1.0053096491487339  (ite (>= x -1.8189932472810668) -1.0681415022205298  (ite (>= x -2.125108173157203) -1.1309733552923256  (ite (>= x -2.525711689447304) -1.1938052083641213  (ite (>= x -3.0776835371752527) -1.2566370614359172  (ite (>= x -3.8947428549298597) -1.3194689145077132  (ite (>= x -5.242183581113174) -1.382300767579509  (ite (>= x -7.915815088305826) -1.4451326206513049  (ite (>= x -31.820515953773853) -1.5393804002589986  (ite (>= x -36.64095836994213) -1.5435112372815323  (ite (>= x -42.19080395675375) -1.547098916218716  (ite (>= x -48.580532256092695) -1.550214856181028  (ite (>= x -55.93734215573288) -1.5529210854782225  (ite (>= x -64.40768401172475) -1.555271476402815  (ite (>= x -74.16017500436386) -1.5573128176535858  (ite (>= x -85.3889557634179) -1.5590857457475877  (ite (>= x -98.31755508243491) -1.5606255539620717  (ite (>= x -113.20333965626273) -1.5619628949097468  (ite (>= x -130.34263742180366) -1.5631243907333863  (ite (>= x -150.07663649124171) -1.5641331630667819  (ite (>= x -172.79817710652114) -1.5650092933118613  (ite (>= x -198.95957182102686) -1.5657702223946006  (ite (>= x -229.08160958297938) -1.566431097957578  (ite (>= x -263.76392296287673) -1.5670050759006577  (ite (>= x -303.69692490312667) -1.5675035822725052  (ite (>= x -349.67555261173885) -1.5679365407263424  (ite (>= x -402.6150921968978) -1.5683125700678613  (ite (>= x -463.56939906014634) -1.5686391558278352  (ite (>= x -533.7518767562177) -1.5689227992748775  (ite (>= x -614.5596319426552) -1.5691691468347237  (ite (>= x -707.6012862650572) -1.5693831024923464  (ite (>= x -814.7289988227012) -1.56956892541447  (ite (>= x -938.0753366796488) -1.569730314735838  (ite (>= x -1080.0957273938295) -1.569870483197048  (ite (>= x -1243.6173386552193) -1.56999222109985  (ite (>= x -1431.8953580736243) -1.5700979518530507  (ite (>= x -1648.6777934557238) -1.5701897802147604  (ite (>= x -1898.2800835501873) -1.5702695341913382  (ite (>= x -2185.6710045064196) -1.570338801427098  (ite (>= x -2516.57158217184) -1.5703989608091837  (ite (>= x -2897.5689792583917) -1.5704512099167631  (ite (>= x -3336.247624491659) -1.570496588860964  (ite (>= x -3841.340194116671) -1.5705360009901315  (ite (>= x -4422.901451300438) -1.570570230872577  (ite (>= x -5092.508404020804) -1.5705999599148033  (ite (>= x -5863.490765934692) -1.5706257799261074  (ite (>= x -6751.1963079739435) -1.5706482048995956  (ite (>= x -7773.296382917718) -1.570667681244126  (ite (>= x -8950.137705035379) -1.57068459667087  (ite (>= x -10305.147387420811) -1.5706992879113886  (ite (>= x -11865.299300411736) -1.5707120474208738  (ite (>= x -13661.651034092432) -1.5707231291999852  (ite (>= x -15729.962154754303) -1.5707327538511848  (ite (>= x -18111.406062537393) -1.57074111297022  (ite (>= x -20853.38962099025) -1.5707483729601768  (ite (>= x -24010.496874454504) -1.5707546783440274  (ite (>= x -27645.57564062988) -1.5707601546416174  (ite (>= x -31830.98860774804) -1.5707649108683606  -1.5707649108683606))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))


;; Declare Inputs
(declare-const forward_velocity Int)
(declare-const steer_direction Int)

;; Declare Outputs
(declare-const pwm_fl Int)
(declare-const pwm_fr Int)
(declare-const pwm_rl Int)
(declare-const pwm_rr Int)
(declare-const servo_fl Int)
(declare-const servo_fr Int)
(declare-const servo_rl Int)
(declare-const servo_rr Int)

;; Input types
(assert (>= forward_velocity -32768))
(assert (<= forward_velocity 32767))
(assert (>= steer_direction -32768))
(assert (<= steer_direction 32767))

;;(assert (= steer_direction 20000))

;; Start Sequence
(declare-const forward_velocity_1 Int) ;; l:44
(assert (= forward_velocity_1 (mapInt forward_velocity -32768 32767 -255 255)))
;;(assert (= forward_velocity_1 (/ forward_velocity 128)))

(declare-const SteeringController_controller_d_fl Int)
(assert (= SteeringController_controller_d_fl 33))
(declare-const SteeringController_controller_d_fr Int)
(assert (= SteeringController_controller_d_fr 33))
(declare-const SteeringController_controller_d_rl Int)
(assert (= SteeringController_controller_d_rl 31))
(declare-const SteeringController_controller_d_rr Int)
(assert (= SteeringController_controller_d_rr 31))

(declare-const SteeringController_controller_G Int)
(assert (= SteeringController_controller_G 30))

(declare-const SteeringController_controller_values_0 Int)
(assert (= SteeringController_controller_values_0 128))
(declare-const SteeringController_controller_values_1 Int)
(assert (= SteeringController_controller_values_1 128))
(declare-const SteeringController_controller_values_2 Int)
(assert (= SteeringController_controller_values_2 128))
(declare-const SteeringController_controller_values_3 Int)
(assert (= SteeringController_controller_values_3 128))

(declare-const SteeringController_controller_beta Real)
(assert (= SteeringController_controller_beta (- (/ pi 2) (mapReal (to_real steer_direction) -32768.0 32767.0 (* (/ (* -1 pi) 13) 3) (* (/ pi 13) 3)))))
;;(assert (= SteeringController_controller_beta (mapReal (to_real steer_direction) -32768.0 32767.0 (/ (- pi) 2) (/ pi 2))))

(declare-const SteeringController_controller_A Real)
(assert (= SteeringController_controller_A (* SteeringController_controller_G (tan SteeringController_controller_beta))))

(declare-const SteeringController_controller_beta_fl Real)
(assert (= SteeringController_controller_beta_fl (atan (/ (+ SteeringController_controller_A SteeringController_controller_d_fl) SteeringController_controller_G))))
(declare-const SteeringController_controller_beta_fr Real)
(assert (= SteeringController_controller_beta_fr (atan (/ (- SteeringController_controller_A SteeringController_controller_d_fr) SteeringController_controller_G))))

(declare-const SteeringController_controller_beta_rl Real)
(assert (= SteeringController_controller_beta_rl (- (atan (/ (+ SteeringController_controller_A SteeringController_controller_d_rl) SteeringController_controller_G)))))
(declare-const SteeringController_controller_beta_rr Real)
(assert (= SteeringController_controller_beta_rr (- (atan (/ (- SteeringController_controller_A SteeringController_controller_d_rr) SteeringController_controller_G)))))

(declare-const SteeringController_controller_multiplicators_0 Real)
(assert (= SteeringController_controller_multiplicators_0 (/ (* SteeringController_controller_beta_fl 2) pi)))
(declare-const SteeringController_controller_multiplicators_1 Real)
(assert (= SteeringController_controller_multiplicators_1 (/ (* SteeringController_controller_beta_fr 2) pi)))
(declare-const SteeringController_controller_multiplicators_2 Real)
(assert (= SteeringController_controller_multiplicators_2 (/ (* SteeringController_controller_beta_rl 2) pi)))
(declare-const SteeringController_controller_multiplicators_3 Real)
(assert (= SteeringController_controller_multiplicators_3 (/ (* SteeringController_controller_beta_rr 2) pi)))

(assert (and (=> (>= steer_direction 0) (and (= servo_fl (to_int (+ 128 (* (- 1.0 SteeringController_controller_multiplicators_0) 128))))
					     (= servo_fr (to_int (+ 128 (* (- 1.0 SteeringController_controller_multiplicators_1) 128))))
					     (= servo_rl (to_int (- 128 (* (+ 1.0 SteeringController_controller_multiplicators_2) 128))))
					     (= servo_rr (to_int (- 128 (* (+ 1.0 SteeringController_controller_multiplicators_3) 128))))))
	     (=> (< steer_direction 0) (and (= servo_fl (to_int (- 128 (* (+ SteeringController_controller_multiplicators_0) 128))))
					    (= servo_fr (to_int (- 128 (* (+ SteeringController_controller_multiplicators_1) 128))))
					    (= servo_rl (to_int (+ 128 (* (- SteeringController_controller_multiplicators_2) 128))))
					    (= servo_rr (to_int (+ 128 (* (- SteeringController_controller_multiplicators_3) 128))))))))

(assert (= pwm_fl forward_velocity_1)) ;; l:65
(assert (= pwm_fr forward_velocity_1)) ;; l:66
(assert (= pwm_rl forward_velocity_1)) ;; l:67
(assert (= pwm_rr forward_velocity_1)) ;; l:68

;; Conditions that must be met
;; ===========================

;; Base conditions (min & max)
;; ---------------------------
(assert (not (and

(>= pwm_fl -255)
(<= pwm_fl 255)
(>= pwm_fr -255)
(<= pwm_fr 255)
(>= pwm_rl -255)
(<= pwm_rl 255)
(>= pwm_rr -255)
(<= pwm_rr 255)

(=> (or (> steer_direction 1) (< steer_direction (- 1)))
    (and
     (>= servo_fl 0)
     (<= servo_fl 255)
     (>= servo_fr 0)
     (<= servo_fr 255)
     (>= servo_rl 0)
     (<= servo_rl 255)
     (>= servo_rr 0)
     (<= servo_rr 255)
     ))

;; Combined Properties
;; -------------------

(=> (and (>= servo_fl 128) (<= servo_fr 128)) (or (and (>= pwm_fl 0) (<= pwm_fr 0)) (and (<= pwm_fl 0) (>= pwm_fr 0))))
(=> (and (>= servo_rl 128) (<= servo_rr 128)) (or (and (>= pwm_rl 0) (<= pwm_rr 0)) (and (<= pwm_rl 0) (>= pwm_rr 0))))
(=> (and (>= servo_fl 128) (>= servo_fr 128)) (or (and (>= pwm_fl 0) (>= pwm_fr 0)) (and (<= pwm_fl 0) (<= pwm_fr 0))))
(=> (and (>= servo_rl 128) (>= servo_rr 128)) (or (and (>= pwm_rl 0) (>= pwm_rr 0)) (and (<= pwm_rl 0) (<= pwm_rr 0))))

)))

;; Check
(check-sat)
;;(get-model)

(echo "SAT means, this is bad!")

(get-value (steer_direction servo_fl servo_fr servo_rl servo_rr))
(get-value (forward_velocity pwm_fl pwm_fr pwm_rl pwm_rr))

(get-value (SteeringController_controller_multiplicators_0 SteeringController_controller_beta SteeringController_controller_A SteeringController_controller_beta_fl))
